(define (f a b) (pair a (pair b ())))
(define (g a b) (pair 1 (read-num)))
(define (h a b) (do
	(print true)
	(pair a b)
))
(do
	(let ((x (f 1 2))) (f x x))
	(let ((x (f 1 2))) (f x x))
	(let ((x (f 1 2))) (f x x))
	(let ((x (f 1 2))) (f x x))
	(let ((x (g 1 2))) x)
	(let ((z (f 1 2))) (f z z))
	(let ((x (f 1 2))) (f x x))
	(let ((x (f 1 2))) (f x x))
	(let ((x (f 1 2))) (f x x))
	(let ((y (f 1 2))) (f y y))
	(let ((x (f 1 2))) (f x x))
	(let ((x (h 1 2))) x)
	(let ((x (f 1 2))) (f x x))
	(let ((x (f 1 2))) (f x x))
	(let ((x (f 1 2))) (f x x))
	(let ((x (f 1 2))) (f x x))
	(let ((x (f 1 2))) (f x x))
	(let ((x (f 1 2))) (f x x))
	(let ((z (f 1 2))) (f z z))
	(let ((x (f 1 2))) (f x x))
	(let ((x (f 1 2))) (f x x))
	(let ((m (f 1 2))) (f m m))
	(let ((x (f 1 2))) (f x x))
	(let ((x (f 1 2))) (f x x))
	(let ((x (f 1 2))) (f x x))
	(let ((x (f 1 2))) (f x x))

	(let ((x (g 1 2))) x)
	(let ((x (g 1 2))) x)
	(let ((x (f 1 2))) (g x x))
	(let ((x (g 1 2))) x)
	(let ((x (g 1 2))) x)
	(let ((x (f 1 2))) (g x x))
	(let ((x (g 1 2))) x)
	(let ((x (f 1 2))) (f x x))
	(let ((m (f 1 2))) (f m m))
	(let ((x (f 1 2))) (f x x))
	(let ((x (h 1 2))) x)
	(let ((x (h 1 2))) x)
	(let ((x (h 1 2))) x)
	(let ((x (g 1 2))) x)
	(let ((x (f 1 2))) (f x x))
)