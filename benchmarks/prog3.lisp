(define (add args) (if (empty? args) 0 (+ (left args) (add (right args)))))
(let ((a 1)) 
    (let ((b 2)) 
        (let ((c 3))
            (let ((d 4))
                (let ((e 5))
                    (let ((f 6))
                        (do 
                            (print (add (pair a (pair b (pair c (pair d (pair e (pair f ()))))))))
                            (print (pair a (pair b (pair c (pair d (pair e (pair f ())))))))
                            (print (add (pair a (pair b (pair c (pair d (pair e (pair f ()))))))))
                            (print (pair a (pair b (pair c (pair d (pair e (pair f ())))))))
                            (print (add (pair a (pair b (pair c (pair d (pair e (pair f ()))))))))
                            (print (pair a (pair b (pair c (pair d (pair e (pair f ())))))))
                            (print (add (pair a (pair b (pair c (pair d (pair e (pair f ()))))))))
                            (print (pair a (pair b (pair c (pair d (pair e (pair f ())))))))
                            (print (add (pair a (pair b (pair c (pair d (pair e (pair f ()))))))))
                            (print (pair a (pair b (pair c (pair d (pair e (pair f ())))))))
                            (print (add (pair a (pair b (pair c (pair d (pair e (pair f ()))))))))
                            (print (pair a (pair b (pair c (pair d (pair e (pair f ())))))))
                            (print (add (pair a (pair b (pair c (pair d (pair e (pair f ()))))))))
                            (print (pair a (pair b (pair c (pair d (pair e (pair f ())))))))
                            (print (add (pair a (pair b (pair c (pair d (pair e (pair f ()))))))))
                            (print (pair a (pair b (pair c (pair d (pair e (pair f ())))))))
                            (print (add (pair a (pair b (pair c (pair d (pair e (pair f ()))))))))
                            (print (pair a (pair b (pair c (pair d (pair e (pair f ())))))))
                            (print (add (pair a (pair b (pair c (pair d (pair e (pair f ()))))))))
                            (print (pair a (pair b (pair c (pair d (pair e (pair f ())))))))
                            (print (add (pair a (pair b (pair c (pair d (pair e (pair f ()))))))))
                            (print (pair a (pair b (pair c (pair d (pair e (pair f ())))))))
                            (print (add (pair a (pair b (pair c (pair d (pair e (pair f ()))))))))
                            (print (pair a (pair b (pair c (pair d (pair e (pair f ())))))))
                            (print (add (pair a (pair b (pair c (pair d (pair e (pair f ()))))))))
                            (print (pair a (pair b (pair c (pair d (pair e (pair f ())))))))
                            (print (add (pair a (pair b (pair c (pair d (pair e (pair f ()))))))))
                            (print (pair a (pair b (pair c (pair d (pair e (pair f ())))))))
                        )
                    )
                )
            )
        )
    )
)
